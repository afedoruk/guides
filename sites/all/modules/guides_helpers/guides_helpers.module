<?php

function guides_helpers_init()
{
	ctools_include('ajax');
	ctools_include('modal');
	ctools_modal_add_js();
	$sample_style = array(
    'ctools-sample-style' => array(
      'modalSize' => array(
        'type' => 'fixed',
        'width' => 500,
        'height' => 300,
        'addWidth' => 20,
        'addHeight' => 15,
      ),
      'modalOptions' => array(
        'opacity' => .8,
        'background-color' => '#000',
      ),
      'animation' => 'fadeIn',
      'modalTheme' => 'CToolsSampleModal',
	  'closeText' => t("Close"),
      'throbber' => theme('image', ctools_image_path('ajax-loader.gif', 'ctools_ajax_sample'), t('Loading...'), t('Loading')),
    ),
  );
		   		  drupal_add_js($sample_style, 'setting');
				    ctools_add_js('ctools-ajax-sample', 'ctools_ajax_sample');
  ctools_add_css('ctools-ajax-sample', 'ctools_ajax_sample');
}

function guides_helpers_menu()
{
	$items["guides/redirect"]=array(
		"access arguments"=>array("edit own guide content"),
		"page callback"=>"guides_helpers_redirect",
		"type"=>MENU_CALLBACK
	);

	$items["guides/%ctools_js/login"]=array(
	  'title' => 'Login',
      'page callback' => 'guides_helpers_login',
      'page arguments' => array(1),
      'access callback' => "user_is_anonymous",
      'type' => MENU_CALLBACK,
	);

	return $items;
}

function guides_helpers_login($js = NULL)
{
	// Fall back if $js is not set.
  if (!$js) {
    return drupal_get_form('user_login');
  }

  ctools_include('modal');
  ctools_include('ajax');
  $form_state = array(
    'title' => t('Login'),
    'ajax' => TRUE,
  );
  $output = ctools_modal_form_wrapper('user_login', $form_state);
  if (empty($output)) {
    $output = array();
	$output[]=ctools_ajax_command_reload();
  }
  ctools_ajax_render($output);
}

function guides_helpers_rules_action_info() {
  return array(
    'guides_helpers_publish_action' => array(
      'label' => t('Publish guide card'),
      'arguments' => array(
        'user' => array('type' => 'user', 'label' => t('Current user')),
      ),
      'module' => 'User',
    )
  );
}

function guides_helpers_publish_action($user)
{
	if(isset($user->uid))
	{
		$uid=$user->uid;
	}
	else
	{
		$uid=$context['uid'];
	}

   db_query("UPDATE {node} SET status = 1 WHERE uid = %d AND type='guide'", $uid);
   watchdog('action', 'Published guide card for guide %uid', array('%uid' => $uid));
}

function guides_helpers_get_card($account=null)
{
	static $nids;
	if(!$account)
	{
		global $user;
		$account=$user;
	}
	if(!isset($nids[$account->uid]))
		$nids[$account->uid]=db_result(db_query("SELECT nid FROM {node} WHERE uid=%d AND type='guide'", $account->uid));
	return $nids[$account->uid];
}

function guides_helpers_redirect()
{
	if($nid=guides_helpers_get_card())
	{
		$path="node/".$nid;
	}
	else
	{
		$path=drupal_get_normal_path(variable_get('site_frontpage', 'node'));
	}
	drupal_goto($path);
}

function guides_helpers_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL)
{
	if($node->type=="testimonial" && $op=="view" && $a4)
	{
		$node->guide=node_load($node->field_guide[0]["nid"]);
	}
}

function guides_helpers_form_alter(&$form, &$form_state, $form_id)
{
	if($form_id=="guide_node_form")
	{
		if($nid=guides_helpers_get_card() && arg(2)!="edit")
		{
			drupal_set_message("У вас уже есть карточка гида, вот она", "error");
			drupal_goto("node/".$nid);
		}
	}
	if($form_id=="testimonial_node_form")
	{
		global $user;
		$node=node_load(arg(3));
		if($node->uid==$user->uid)
		{
			drupal_set_message("Нельзя написать отзыв о самом себе :)", "error");
			drupal_goto("node/".$node->nid);
		}
	}
}

function guides_helpers_user($op, &$edit, &$account, $category = NULL)
{
	if($op=="view")
	{
		if($nid=guides_helpers_get_card($account))
		{
			$guide=node_load($nid);
			$account->content["guide"]["#value"]=node_view($guide, 1);
		}
		$res=db_query("SELECT * FROM {node} WHERE uid=%d AND status=1 AND type='testimonial' ORDER BY created DESC", $account->uid);
		while($row=db_fetch_object($res))
		{
			$testimonials[]=node_load($row->nid);
		}
		if(sizeof($testimonials))
			$account->content["testimonials"]["#value"]=theme("guides_helpers_user_testimonials", $testimonials);
	}
}

function guides_helpers_theme($existing, $type, $theme, $path) 
{
  return array(
    'guides_helpers_user_testimonials' => array(
      'arguments' => array('testimonials'=>array()),
	  'file'=>"guides_helpers.theme.inc"
    ),    
  );
}

